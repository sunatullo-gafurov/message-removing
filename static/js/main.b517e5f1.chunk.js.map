{"version":3,"sources":["layouts/Page/Page.js","components/ChannelsList/ChannelsList.js","components/Message/Message.js","constants/index.js","http/index.js","actions/actionCreators.js","actions/actionTypes.js","components/MessagesList/MessagesList.js","components/MessageEditForm/MessageEditForm.js","components/MessageArea/MessageArea.js","pages/Chats/Chats.js","App.js","serviceWorker.js","reducers/channels.js","reducers/messages.js","store/index.js","index.js","layouts/Page/Page.module.css"],"names":["Page","sidebar","main","className","styles","container","ChannelsList","Message","item","onEdit","onResend","onDelete","status","onClick","id","content","client","axios","create","baseURL","process","messagesFetch","dispatch","getState","a","lastSeenId","messages","list","type","payload","get","params","data","items","error","messagesSaveMessage","messagesMessageStatusChange","messageDeleteSuccess","messageDelete","delete","console","log","messageSave","itemToSave","nanoid","created","Date","now","post","MessagesList","useSelector","state","loading","useDispatch","useEffect","setTimeout","clearTimeout","handleEdit","messageEdit","handleDelete","handleResend","map","o","key","MessageEditForm","edit","onSubmit","evt","preventDefault","onChange","value","target","MessageArea","Chats","App","Boolean","window","location","hostname","match","initialListState","channelsReducer","combineReducers","initialEditState","messagesReducer","action","last","ids","length","lastSeen","filter","includes","existing","find","undefined","reducer","channels","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.b517e5f1.chunk.js","sourcesContent":["import React from 'react'\nimport styles from './Page.module.css'\n\nexport default function Page({sidebar, main}) {\n    return (\n        <div className={styles.container}>\n            <div className={styles.sidebar}>\n                {sidebar}\n            </div>\n            <div className={styles.main}>\n                {main}\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function ChannelsList() {\n    return (\n        <div>\n            ChannelsList\n        </div>\n    )\n}\n","import React from 'react'\nimport { MESSAGE_STATUS_FAIL, MESSAGE_STATUS_SENT } from '../../constants'\n\n// –ü–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç, –Ω–µ –¥–æ–ª–∂–µ–Ω –ª–∞–∑–∏—Ç—å –≤ state\nexport default function Message({ item, onEdit, onResend, onDelete }) {\n    const handleEdit = () => {\n        onEdit(item);\n    }\n\n    const handleDelete = () => {\n        onDelete(item.id)\n    };\n\n    const handleResend = () => {\n        onResend(item);\n    }\n\n    return (\n        <div>\n            {item.status === MESSAGE_STATUS_SENT && <><button onClick={handleEdit}>‚úé</button><button onClick={handleDelete}>x</button></>}\n            {item.status === MESSAGE_STATUS_FAIL && <button onClick={handleResend}>üóò</button>}\n            <p>\n                {item.content}\n            </p>\n            <p>\n                {item.id}\n            </p>\n            <p>\n                {item.status}\n            </p>\n        </div>\n    )\n}\n","export const MESSAGE_STATUS_PENDING = 'MESSAGE_STATUS_PENDING';\nexport const MESSAGE_STATUS_SENT = 'MESSAGE_STATUS_SENT';\nexport const MESSAGE_STATUS_FAIL = 'MESSAGE_STATUS_FAIL';","import axios from 'axios';\n\n// process.env.PORT\nconst client = axios.create({\n    baseURL: process.env.REACT_APP_API_URL,\n    // TODO: specify other settings\n});\n\nexport default client; // index.js -> import client from http;","import { MESSAGE_CHANGE, MESSAGE_SAVE_REQUEST, MESSAGE_SAVE_SUCCESS, MESSAGE_SAVE_FAILURE, MESSAGES_SAVE_MESSAGE, MESSAGES_MESSAGE_STATUS_CHANGE, MESSAGE_EDIT, MESSAGES_FETCH_REQUEST, MESSAGES_FETCH_SUCCESS, MESSAGES_FETCH_FAILURE, MESSAGE_DELETE_REQUEST, MESSAGE_DELETE_SUCCESS } from \"./actionTypes\";\nimport nanoid from 'nanoid';\nimport { MESSAGE_STATUS_SENT, MESSAGE_STATUS_FAIL, MESSAGE_STATUS_PENDING } from \"../constants\";\nimport client from '../http'; // index.js –ø–∏—Å–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ\n\nexport const messagesFetchRequest = () => {\n    return {\n        type: MESSAGES_FETCH_REQUEST,\n        payload: {}\n    }\n}\nexport const messagesFetchSuccess = items => {\n    return {\n        type: MESSAGES_FETCH_SUCCESS,\n        payload: { items }\n    }\n}\nexport const messagesFetchFailure = error => {\n    return {\n        type: MESSAGES_FETCH_FAILURE,\n        payload: { error }\n    }\n}\n// 1. –í–∞—Ä–∏–∞–Ω—Ç - –ø–æ–ø—Ä–æ—Å–∏—Ç—å lastSeenId –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã\n// 2. –í–∞—Ä–∏–∞–Ω—Ç - –≤—ã—Ç–∞—Å–∫–∏–≤–∞—Ç—å –∏–∑ store\nexport const messagesFetch = () => async (dispatch, getState) => {\n    const { lastSeenId } = getState().messages.list;\n    dispatch(messagesFetchRequest())\n    try {\n        const { data } = await client.get('/messages', { params: { lastSeenId } }); // —Ç–µ–ø–µ—Ä—å .json() –∏–ª–∏ JSON.parse() –¥–µ–ª–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ\n        dispatch(messagesFetchSuccess(data)); // response - —Ü–µ–ª–∏–∫–æ–º –æ—Ç–≤–µ—Ç, data - –¥–∞–Ω–Ω—ã–µ —Ç–µ–ª–∞\n    } catch (e) {\n        dispatch(messagesFetchFailure(e));\n    }\n}\n\nexport const messagesSaveMessage = item => {\n    return {\n        type: MESSAGES_SAVE_MESSAGE,\n        payload: { item },\n    }\n}\n\nexport const messagesMessageStatusChange = (id, status) => {\n    return {\n        type: MESSAGES_MESSAGE_STATUS_CHANGE,\n        payload: { id, status },\n    }\n}\n\nexport const messageEdit = item => {\n    return {\n        type: MESSAGE_EDIT,\n        payload: { item }\n    };\n}\n\nexport const messageDeleteRequest = () => {\n    return {\n        type: MESSAGE_DELETE_REQUEST,\n        payload: {}\n    };\n};\n\nexport const messageDeleteSuccess = id => {\n    return {\n        type: MESSAGE_DELETE_SUCCESS,\n        payload: {\n            id\n        }\n    };\n};\n\nexport const  messageDelete = async (id, dispatch) => {\n    dispatch(messageDeleteRequest());\n    try {\n        await client.delete(`/messages/${id}`);\n        dispatch(messageDeleteSuccess(id))\n    } catch (e) {\n        console.log(e);\n    }\n};\n\nexport const messageChange = ({ content }) => {\n    return {\n        type: MESSAGE_CHANGE,\n        payload: { content }\n    };\n}\n\nexport const messageSaveRequest = () => {\n    return {\n        type: MESSAGE_SAVE_REQUEST,\n        payload: {}\n    }\n}\n\nexport const messageSaveSuccess = () => {\n    return {\n        type: MESSAGE_SAVE_SUCCESS,\n        payload: {}\n    }\n}\n\nexport const messageSaveFailure = error => {\n    return {\n        type: MESSAGE_SAVE_FAILURE,\n        payload: {\n            error\n        }\n    }\n}\n\n// thunk:\n// action creator = (–∞—Ä–≥—É–º–µ–Ω—Ç—ã) => (dispatch, getState) => { ... }\n\n//export const messageSave = async (dispatch, item) => {\nexport const messageSave = item => async dispatch => {\n    dispatch(messageSaveRequest()); // SAVE_REQUEST\n\n    const itemToSave = {\n        ...item,\n        id: item.id === '' ? nanoid() : item.id, // item.id || nanoid()\n        status: MESSAGE_STATUS_PENDING,\n        created: Date.now(),\n    }; // Date - built-in class, static method\n    dispatch(messagesSaveMessage(itemToSave));\n\n    /* –≤–º–µ—Å—Ç–æ\n    try {\n        const response = await fetch();\n        if (!response.ok) {\n            throw new Error();\n        }\n        const data = response.json();\n    } catch (e) {\n        console.log(e);\n    }\n    */\n\n    // —Å axios\n    try {\n        await client.post('/messages', itemToSave); // —Ç–µ–ø–µ—Ä—å .json() –∏–ª–∏ JSON.parse() –¥–µ–ª–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ\n        dispatch(messagesMessageStatusChange(itemToSave.id, MESSAGE_STATUS_SENT));\n    } catch (e) {\n        console.log(e);\n        dispatch(messagesMessageStatusChange(itemToSave.id, MESSAGE_STATUS_FAIL));\n    }\n}","export const CHANNELS_REQUEST = 'CHANNELS_REQUEST';\nexport const CHANNELS_FAILURE = 'CHANNELS_FAILURE';\nexport const CHANNELS_SUCCESS = 'CHANNELS_SUCCESS';\n\nexport const MESSAGES_FETCH_REQUEST = 'MESSAGES_FETCH_REQUEST';\nexport const MESSAGES_FETCH_FAILURE = 'MESSAGES_FETCH_FAILURE';\nexport const MESSAGES_FETCH_SUCCESS = 'MESSAGES_FETCH_SUCCESS';\n\nexport const MESSAGES_SAVE_MESSAGE = 'MESSAGES_SAVE_MESSAGE';\nexport const MESSAGES_MESSAGE_STATUS_CHANGE = 'MESSAGES_MESSAGE_STATUS_CHANGE';\n\nexport const MESSAGE_EDIT = 'MESSAGE_EDIT';\nexport const MESSAGE_CHANGE = 'MESSAGE_CHANGE';\nexport const MESSAGE_DELETE_REQUEST= 'MESSAGE_DELETE_REQUEST';\nexport const MESSAGE_DELETE_SUCCESS= 'MESSAGE_DELETE_SUCCESS';\n\nexport const MESSAGE_SAVE_REQUEST = 'MESSAGE_SAVE_REQUEST';\nexport const MESSAGE_SAVE_FAILURE = 'MESSAGE_SAVE_FAILURE';\nexport const MESSAGE_SAVE_SUCCESS = 'MESSAGE_SAVE_SUCCESS';","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport Message from '../Message/Message';\nimport { messageEdit, messageDelete, messageSave, messagesFetch } from '../../actions/actionCreators';\nimport { useEffect } from 'react';\n\nexport default function MessagesList() {\n    const { items, loading} = useSelector(state => state.messages.list);\n    const dispatch = useDispatch(); // react-redux - dispatch - –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è\n\n    useEffect(() => {\n        dispatch(messagesFetch()); // first load (–Ω–µ –∂–¥—ë–º —Å–µ–∫—É–Ω–¥—É)\n    }, [dispatch]);\n\n    useEffect(() => {\n        // subscriptions (–ø–æ–¥–ø–∏—Å–∫–∏)\n        // –ù–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å setInterval - –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç—ã –±—É–¥—É—Ç –º–µ–¥–ª–µ–Ω–Ω—ã–º–∏, —Ç–æ –º–æ–∂–Ω–æ –ø–µ—Ä–µ—Ç–µ—Ä–µ—Ç—å –¥–∞–Ω–Ω—ã–µ\n        // const id = setInterval(() => {\n        //     dispatch(messagesFetch());\n        // }, 5000);\n        // –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é unsubscribe (–æ—Ç–ø–∏—Å–∫–∞)\n        // return () => clearInterval(id);\n        let id = 0;\n        if (loading === false) {\n            id = setTimeout(() => {\n                dispatch(messagesFetch());\n            }, 1000000000);\n            return () => clearTimeout(id);\n        }\n    }, [dispatch, loading]); // dispatch - deps (–≤—Å—ë, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–Ω–∞—Ä—É–∂–∏)\n\n    const handleEdit = item => {\n        dispatch(messageEdit(item));\n    };\n    const handleDelete = id => {\n        messageDelete(id, dispatch);\n    };\n    const handleResend = item => {\n        messageSave(dispatch, item);\n    };\n\n    return (\n        <div>\n            <ul>\n                {items.map(o => <li key={o.id}>\n                    <Message item={o} onEdit={handleEdit} onResend={handleResend} onDelete={handleDelete} />\n                </li>)}\n            </ul>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { messageChange, messageSave } from '../../actions/actionCreators';\n\nexport default function MessageEditForm() {\n    // react-redux:\n    // - useSelector -> –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–±–∏—Ä–∞—Ç—å –∫—É—Å–æ—á–µ–∫ state\n    // - useDispatch -> –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∞—Ç—å dispatch\n    const { item } = useSelector(state => state.messages.edit);\n    const dispatch = useDispatch();\n\n    const handleSubmit = evt => {\n        evt.preventDefault();\n        // messageSave(dispatch, item);\n        dispatch(messageSave(item)); // –±–ª–∞–≥–æ–¥–∞—Ä—è redux thunk\n    };\n\n    const handleChange = evt => {\n        const { value } = evt.target;\n        dispatch(messageChange({ content: value }));\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input onChange={handleChange} value={item.content} />\n            <button>Ok</button>\n        </form>\n    )\n}\n","import React from 'react'\nimport MessagesList from '../MessagesList/MessagesList';\nimport MessageEditForm from '../MessageEditForm/MessageEditForm';\n\nexport default function MessageArea() {\n    return (\n        <div>\n            <MessagesList />\n            <MessageEditForm />\n        </div>\n    )\n}\n","import React from 'react'\nimport Page from '../../layouts/Page/Page'\nimport ChannelsList from '../../components/ChannelsList/ChannelsList'\nimport MessageArea from '../../components/MessageArea/MessageArea'\n\nexport default function Chats() {\n    return (\n        <Page\n            sidebar={<ChannelsList />}\n            main={<MessageArea />}\n        />\n    )\n}\n","import React from 'react';\nimport './App.css';\nimport Chats from './pages/Chats/Chats';\n\nfunction App() {\n  return (\n    <Chats />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\n\nconst initialListState = {\n    items: [],\n    loading: false,\n    error: null,\n};\n\n// state <- list\nexport function channelsListReducer(state = initialListState, action) {\n    return state;\n}\n\n/*\nchannels: {\n    list: { <- channelsListReducer\n        items: [],\n        loading: false,\n        error: null,\n    },\n    edit: { <- channelEditReducer\n        item: {...},\n        loading: false,\n        error: null,\n    }\n}\n*/\n\nconst channelsReducer = combineReducers({\n    list: channelsListReducer,\n    // edit: channelEditReducer,\n});\n\nexport default channelsReducer;","import { combineReducers } from \"redux\";\nimport { MESSAGE_CHANGE, MESSAGE_SAVE_REQUEST, MESSAGES_SAVE_MESSAGE, MESSAGES_MESSAGE_STATUS_CHANGE, MESSAGE_EDIT, MESSAGES_FETCH_REQUEST, MESSAGES_FETCH_SUCCESS, MESSAGES_FETCH_FAILURE, MESSAGE_DELETE_REQUEST, MESSAGE_DELETE_SUCCESS } from \"../actions/actionTypes\";\nimport { MESSAGE_STATUS_PENDING } from \"../constants\";\n\nconst initialListState = {\n    items: [],\n    loading: false,\n    error: null,\n    lastSeenId: '', // –∫–∞–∫–æ–π –ø–æ—Å–ª–µ–¥–Ω–∏–π id –º—ã –≤–∏–¥–µ–ª–∏\n};\n\n// state <- list\nexport function messagesListReducer(state = initialListState, action) {\n    // TODO: handle action\n    switch (action.type) {\n        // action –ø—Ä–æ—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ –≤—Å–µ reducer'—ã (–º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –∏ —Ç–∞–∫, –Ω–æ —ç—Ç–æ —á–∞—Å—Ç–æ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –æ—à–∏–±–∫–∞–º)\n        // case MESSAGE_SAVE_SUCCESS: {\n        //     console.log('received');\n        // }\n        case MESSAGES_FETCH_REQUEST: {\n            return { ...state, loading: true, error: null };\n        }\n        case MESSAGES_FETCH_SUCCESS: {\n            const { items } = action.payload;\n            const ids = items.map(o => o.id);\n            let last;\n            if (items.length !== 0) {\n                last = items[items.length - 1];\n            }\n            const lastSeen = last && last.id;\n            const lastSeenId = lastSeen || state.lastSeenId; // —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è\n            // 1. –ù–µ –¥–æ–±–∞–≤–ª—è—Ç—å —Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –µ—Å—Ç—å\n            // 2. –°–¥–µ–ª–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ (–ø—É—Å—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É –¥—Ä—É–≥–∏—Ö –Ω–µ —É–¥–∞–ª—è–µ—Ç—Å—è) - —É–¥–∞–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —É –≤–∞—Å\n            console.log(items);\n            return { ...state, items: [...state.items.filter(o => !ids.includes(o.id)), ...items], loading: false, error: null, lastSeenId }; // TODO: –ó–∞–º–µ–Ω—è—Ç—å –≤—Å—ë –ø–ª–æ—Ö–æ\n        }\n        case MESSAGES_FETCH_FAILURE: {\n            const { error } = action.payload;\n            return { ...state, loading: false, error };\n        }\n        case MESSAGES_SAVE_MESSAGE: {\n            const { item } = action.payload;\n            // TODO: handle edit of existing item\n            const existing = state.items.find(o => o.id === item.id);\n            if (existing === undefined) {\n                return { ...state, items: [...state.items, item] };\n            }\n            return { ...state, items: state.items.map(o => o.id === item.id ? item : o) };\n        }\n        case MESSAGES_MESSAGE_STATUS_CHANGE: {\n            const { id, status } = action.payload;\n            return { ...state, items: state.items.map(o => o.id === id ? { ...o, status } : o) };\n        }\n        case MESSAGE_DELETE_REQUEST:\n            return {...state, loading: true, error: null};\n        case MESSAGE_DELETE_SUCCESS:\n            return {...state, items: state.items.filter(o => o.id !== action.payload.id), loading: false, error: null};\n        default:\n            return state;\n    }\n\n   \n}\n\nconst initialEditState = {\n    item: {\n        id: '',\n        content: '',\n        // type <- TODO: file uploading\n        status: MESSAGE_STATUS_PENDING,\n        created: 0,\n    },\n    loading: false,\n    error: null,\n}\n\n// 1. Status Component -> —á–∞—Å–∏–∫–∏, –≥–∞–ª–æ—á–∫–∞, –≤–æ—Å–∫–ª.–∑–Ω–∞–∫\n// 2. –ï—Å–ª–∏ –≤–æ—Å–∫–ª.–∑–Ω–∞–∫ - —Ç–æ–≥–¥–∞ –¥–æ–ª–∂–Ω–∞ –ø–æ—è–≤–∏—Ç—å—Å—è –∫–Ω–æ–ø–∫–∞ Resend\n// 3. –ò–∑ —Ñ–æ—Ä–º—ã –≤—ã—Ä–µ–∑–∞—Ç—å –≤—Å—ë –Ω–µ–Ω—É–∂–Ω–æ–µ\n// 4. –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n// 5. –û—Ñ–æ—Ä–º–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è\n\n// state <- edit\nexport function messageEditReducer(state = initialEditState, action) {\n    switch (action.type) {\n        case MESSAGE_EDIT: {\n            const { item } = action.payload;\n            return { ...state, item };\n        }\n        case MESSAGE_CHANGE: {\n            const { content } = action.payload;\n            return { ...state, item: { ...state.item, content } };\n        }\n        case MESSAGE_SAVE_REQUEST: {\n            // —Å—Ä–∞–∑—É –≤—ã—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ –∫–∞–∫ –≤ Telegram\n            return { item: { ...initialEditState.item }, loading: true, error: null };\n        }\n        default:\n            return state;\n    }\n\n    \n}\n\n/*\nmessages: {\n    list: { <- messagesListReducer\n        items: [],\n        loading: false,\n        error: null,\n    },\n    edit: { <- messageEditReducer\n        item: {...},\n        loading: false,\n        error: null,\n    }\n}\n*/\n\nconst messagesReducer = combineReducers({\n    list: messagesListReducer,\n    edit: messageEditReducer,\n});\n\nexport default messagesReducer;","import { combineReducers, createStore, applyMiddleware, compose } from \"redux\";\nimport channelsReducer from \"../reducers/channels\";\nimport messagesReducer from \"../reducers/messages\";\nimport thunk from \"redux-thunk\";\n\n/*\nstate = { <- reducer\n    channels <- channelsReducer\n    messages <- messageReducer\n    auth <- authReducer\n}\n*/\n\nconst reducer = combineReducers({\n    channels: channelsReducer,\n    messages: messagesReducer,\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    reducer,\n    // –≤–∫–ª—é—á–∞–µ—Ç Redux Dev Tools\n    composeEnhancers(applyMiddleware(thunk))\n);\n\nexport default store;\n","import {Provider} from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// index.js - —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ - –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –∫–æ–≥–¥–∞ –≤—ã —É–∫–∞–∑—ã–≤–∞–µ—Ç–µ –ø–∞–ø–∫—É\nimport store from './store'; // index.js –∏–∑ –Ω–µ–≥–æ –≤–æ–∑—å–º—ë—Ç—Å—è default export\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Page_container__1Ygh4\",\"scrollY\":\"Page_scrollY__2nhdZ\",\"sidebar\":\"Page_sidebar__tlHfx Page_scrollY__2nhdZ\",\"main\":\"Page_main__M36wb Page_scrollY__2nhdZ\"};"],"sourceRoot":""}